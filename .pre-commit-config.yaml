# Pre-commit configuration for Silvertine trading system
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key

  - repo: https://github.com/psf/black
    rev: 23.10.1
    hooks:
      - id: black
        language_version: python3.11
        exclude: ^(cache/|build/|dist/)

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        exclude: ^(cache/|build/|dist/)

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        exclude: ^(tests/|cache/|build/|dist/)
        additional_dependencies:
          - types-PyYAML
          - types-redis
          - types-passlib
        args: [--ignore-missing-imports]

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]
        exclude: ^(cache/|build/|dist/)

  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [optional-scope]

  - repo: https://github.com/python-poetry/poetry
    rev: 1.7.1
    hooks:
      - id: poetry-check
        files: pyproject.toml

  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: requirements.*\.txt$

  - repo: local
    hooks:
      - id: pytest-unit
        name: pytest unit tests
        entry: python -m pytest tests/unit -x -v
        language: system
        pass_filenames: false
        always_run: false
        stages: [pre-push]

      - id: config-validation
        name: validate configuration templates
        entry: python -c "import yaml; [yaml.safe_load(open(f)) for f in ['config/environments/development.yaml.example'] if open(f).read().strip()]"
        language: system
        files: ^config/.*\.yaml\.example$
        pass_filenames: false